import groovy.json.JsonSlurperClassic 
node(label:'dsp-jenkins-infra-validation') {
    cleanWs()
    def jenkinsRepo = "d_tool_central_jenkins"
    def infraRepo = "dsp_daa_fhir_layering"
    def robotFrameworkRepo = "root_framework" 
    def credentialId_aperuma = "c266e724-5d09-46f2-80cc-dbf71d996337"
    def credentialId_vumashan = "29571386410-29571386410-29571386410"
    def credentialId_dnethaji = "9e0a53bb-88d6-4697-b846-f1bcd55be9eb"
    def xrayUploader = "../${infraRepo}"
    def output = "Results"
    stage('New ORG API Test') {
                        credential_id = "${credentialId_aperuma}"
                        print "credential assigned"
                    dir (infraRepo){
                        git credentialsId: credential_id, branch:'Docspera_Automated_Test', url: "https://sourcecode.jnj.com/scm/asx-jegp/${infraRepo}.git"
                    }
                    dir (jenkinsRepo){
                        git credentialsId: credential_id, branch:'devops-coe', url: "https://sourcecode.jnj.com/scm/asx-jegp/${jenkinsRepo}.git"
                    }
                    sh (script:'lsb_release -a')
                    sh (script: 'sudo curl "https://bootstrap.pypa.io/pip/2.7/get-pip.py" -o "get-pip.py"')
                    //sh (script: 'sudo python3.7 get-pip.py')
					sh (script: 'sudo python3.7 -m pip install --upgrade pip')
					sh (script:'sudo apt install -y chromium-browser')
					sh (script:'sudo apt install unzip')
					sh (script:'wget https://chromedriver.storage.googleapis.com/111.0.5563.64/chromedriver_linux64.zip')
					sh (script:'unzip chromedriver_linux64.zip')
					sh (script:'chmod +x chromedriver')
					sh('sudo mv ./chromedriver  /usr/bin/')
					sh (script: 'pip install selenium==4.8.2')
					sh (script: 'pip install pytest==6.2.5')
					sh (script: 'pip install pytest-html')
					sh (script: 'pip install requests==2.25.1')
                    dir(output){
                        def test_execution = sh(script: "python3.7 -m pytest -s -v -m ${TAG} ../dsp_daa_fhir_layering/tests/Org_API_Regression_test/test --env '${ENV}' --html=../Results/Org_service_regression_test_report.html --self-contained-html --capture=sys --show-capture=log", returnStatus: true)
                        sh "echo ${test_execution}"
                        if (test_execution != 0){
                        catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                 sh "exit 1"
                        }
                    }   
            }
		}
		stage('upload report to bitbucket') {
        dir('dsp_daa_fhir_layering') {
            //sh('sudo rm -rf /home/agentadmin/workspace/DailyTest_API_IDEV/dsp_daa_fhir_layering/Reports/*')
            def time = sh (returnStdout: true, script: """date \"+%Y-%m-%d_%H-%M-%S\"""").toString().trim()
			
            sh("""
				sudo mkdir -p Reports/ORG_Service_Regression_Test_Reports/${ENV}/Test-reports-${time}
                sudo mv /home/agentadmin/workspace/Regression_Test_NewDev_ORG_API/Results/* Reports/ORG_Service_Regression_Test_Reports/${ENV}/Test-reports-${time} || true
            """)
            withCredentials([usernamePassword(credentialsId: 'c266e724-5d09-46f2-80cc-dbf71d996337',
			usernameVariable: 'username',
			passwordVariable: 'password')]) {
			 script {
                        encodedPass=URLEncoder.encode(password, "UTF-8")
                    }
            sh('git config --global user.name "Perumal, Avinash [ETHUS NON-J&J]"')
            sh('git config --global user.email Aperuma2@its.jnj.com')
			sh('git status')
            sh('git add Reports')
            sh('git commit -m "JAYU-3026: uploading reports" || true')
            sh("git push https://$username:$encodedPass@sourcecode.jnj.com/scm/asx-jegp/${infraRepo}.git")
		}
        }
   }
}

